input {
          beats {
            port => 5044
          }
}







filter{
  grok {
    match => {
      "message" => [
        "^\|TID: (?<trace_id>.*)\|%{TIMESTAMP_ISO8601:logdate}\|%{LOGLEVEL:log_level}\s?\|%{USERNAME:app_name}\|%{URIPATH:request_uri}?\|%{URIPROTO:http_method}?\|%{IP:client_ip}?\|%{USERNAME:thread_name}?\|%{DATA:package_name_and_line}?\|%{BASE16NUM:request_id}?\|(?<msg>.*?(?<json_msg>[\{|\[]\"resultCode\".*[\}|\]])?)\|",
        "^\|%{TIMESTAMP_ISO8601:logdate}\|%{LOGLEVEL:log_level}\s?\|%{USERNAME:app_name}\|%{URIPATH:request_uri}?\|%{URIPROTO:http_method}?\|%{IP:client_ip}?\|%{USERNAME:thread_name}?\|%{DATA:package_name_and_line}?\|%{BASE16NUM:request_id}?\|(?<msg>.*?(?<json_msg>[\{|\[]\"resultCode\".*[\}|\]])?)\|"
      ]
    }
  }
  date {
    match => ["logdate", "yyyy-MM-dd HH:mm:ss,SSS", "ISO8601"]
    target => "@timestamp"
    remove_field => [ "logdate" ]
  }
  json {
    skip_on_invalid_json => true
    source => "json_msg"
    target => "json"
  }
  mutate {
    rename => {"[json][data]" => "[jsonDotData]"}
    remove_field => ["jsonDotData", "host"]
    convert => {
      "[json][resultCode]" => "string"
    }
  }
  if [request_uri] == "/api/ping" {
    drop {}
  }
}



output {
             elasticsearch {
                hosts => ['http://10.0.3.41:9200']
                index => "elk_logs"
             }
}
